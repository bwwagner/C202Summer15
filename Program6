/*
 *  C202/I211 Summer 2015
 *  Program6.java
 *  Written By   : Branden Wagner and Tim McEndoo
 *  Date Written : 07/31/15
 *  Purpose      : Program 6
 *                 Use JavaFX to draw two circles with radius 10 pixels at
 *                 separate centers.  Draw a line connecting the two
 *                 midpoints and label with the distance between the two centers.
 *                 Allow the user to move either circle with a mouse click
 *                 and update all attributes as needed.
 *  
 */
package program6;

import javafx.application.Application;
import static javafx.application.Application.launch;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.stage.Stage;
import javafx.scene.text.Text;
import javafx.geometry.Point2D;

/**
 *
 * @author Branden Wagner
 */
public class Program6 extends Application {

    @Override // Override the start method in the Application class
    public void start(Stage primaryStage) {
        // Create first circle and set its properties
        Circle circle1 = new Circle(10);
        circle1.setCenterX(40);
        circle1.setCenterY(40);
        double x1 = circle1.getCenterX();
        double y1 = circle1.getCenterY();

        circle1.setStroke(Color.BLACK);
        circle1.setFill(Color.CHOCOLATE);

        // Create second circle and set its properties    
        Circle circle2 = new Circle(10);
        circle2.setCenterX(120);
        circle2.setCenterY(150);
        double x2 = circle2.getCenterX();
        double y2 = circle2.getCenterY();
        circle2.setStroke(Color.BLACK);
        circle2.setFill(Color.RED);

        // Create a line connecting the centers of the circles    
        Line l = new Line(x1, y1, x2, y2);
        double xMid = (x1 + x2) / 2;
        double yMid = (y1 + y2) / 2;

        // Create a point for distance formula    
        Point2D p = new Point2D(x2, y2);

        //Create textbox which displays the distance between the circles' centers    
        Text t = new Text(xMid, yMid, p.distance(x1, y1) + "");

        // Create a pane to hold the circle 
        Pane pane = new Pane();
        pane.getChildren().addAll(circle1, circle2, l, t);

        // Create a scene and place it in the stage
        Scene scene = new Scene(pane, 250, 250);
        primaryStage.setTitle("Program 6"); // Set the stage title
        primaryStage.setScene(scene); // Place the scene in the stage
        primaryStage.show(); // Display the stage

        //EventHandler for moving first circle and resetting objects    
        circle1.setOnMouseDragged(e -> {

            //Check x boundaries so circle does not leave the visible scene          
            if (e.getSceneX() <= scene.getWidth() - circle1.getRadius() && e.getSceneX() > circle1.getRadius()) {
                circle1.setCenterX(e.getX());
                l.setEndX(e.getX());
                t.setX((e.getX() + circle2.getCenterX()) / 2);
                l.setStartX(circle2.getCenterX());
                t.setText(p.distance(circle2.getCenterX(), e.getX()) + "");
            }

            //Check y boundaries so circle does not leave the visible scene          
            if (e.getSceneY() <= scene.getHeight() - circle1.getRadius() && e.getSceneY() > circle1.getRadius()) {
                circle1.setCenterY(e.getY());
                l.setStartY(circle2.getCenterY());
                l.setEndY(e.getY());
                t.setY((e.getY() + circle2.getCenterY()) / 2);
                t.setText(p.distance(circle2.getCenterX(), e.getX()) + "");
            }
        });

        //EventHandler for moving second circle and resetting objects      
        circle2.setOnMouseDragged(e -> {

            //Check x boundaries so circle does not leave the visible scene        
            if (e.getSceneX() <= scene.getWidth() - circle2.getRadius() && e.getSceneX() > circle2.getRadius()) {
                circle2.setCenterX(e.getX());
                l.setEndX(e.getX());
                t.setX((e.getX() + circle1.getCenterX()) / 2);
                l.setStartX(circle1.getCenterX());
                t.setText(p.distance(circle1.getCenterX(), e.getX()) + "");
            }

            //Check y boundaries so circle does not leave the visible scene          
            if (e.getSceneY() <= scene.getHeight() - circle2.getRadius() && e.getSceneY() > circle2.getRadius()) {
                circle2.setCenterY(e.getY());
                l.setStartY(circle1.getCenterY());
                l.setEndY(e.getY());
                t.setY((e.getY() + circle1.getCenterY()) / 2);
                t.setText(p.distance(circle1.getCenterX(), e.getX()) + "");
            }
        });
    }//start

    /**
     * The main method is only needed for the IDE with limited JavaFX support.
     * Not needed for running from the command line.
     * @param args
     */
    public static void main(String[] args) {
        launch(args);
    }//main

}//class Program6
