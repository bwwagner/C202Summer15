/*
 *  C202/I211 Summer 2015
 *  Lab10.java
 *  Written By   : Branden Wagner
 *  Date Written : 07/28/15
 *  Purpose      : Lab 10
 *                  Do the problem 15.3  - Move the ball on Page 621 in your text book. 
 *                 (Move the ball) Write a program that moves the ball in a pane. 
 *                  You should define a pane class for displaying the ball and 
 *                  provide the methods for moving the ball left, right, up, and
 *                  down, as shown in Figure 15.24c. Check the boundary
 *                  to prevent the ball from moving out of sight completely.
 *  
 */

package lab10;

import javafx.animation.KeyFrame;
import javafx.animation.KeyValue;
import javafx.animation.Timeline;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.util.Duration;

/**
 *
 * @author Branden Wagner
 */
    public class BallPane extends Pane {

        public final double radius = 20;
        private double x = radius, y = radius;
        private double dx = 1, dy = 1;
        private Circle circle = new Circle(x, y, radius);
        private Timeline animation;

        public BallPane() {
            circle.setFill(Color.GREEN); // Set ball color
            getChildren().add(circle); // Place a ball into this pane
    // Create an animation for moving the ball
            animation = new Timeline(new KeyFrame(Duration.millis(50), e -> moveBall()));
            animation.setCycleCount(Timeline.INDEFINITE);
            animation.play(); // Start animation
        }

	public void play(){
	animation.play();
    	}

	public void pause(){
	animation.pause();
	}

	public void increaseSpeed(){
	animation.setRate(animation.getRate() + 0.1);
	}

	public void decreaseSpeed(){
	animation.getRate() > 0 ? animation.getRate() - 0.1 : 0);
	}

	public DoubleProperty rateProperty(){
	return animation.rateProperty();
	}

	public void moveBall(){
	//check boundaries
	if (x < radius || x > getWidth() - radius) {
		dx *= -1; //reverse direction
	}
	if (y < radius || y > getHeight() - radius) {
		dy *= -1; //reverse direction
	}

	//Adjust ball position
	x += dx;
	y += dy;
	circle.setCenterX(x);
	circle.setCenterY(y);
	}

}
